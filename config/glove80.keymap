/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define HYPER LC(LS(LG(LALT)))// layers
#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&mo LOWER>,
                <&to LOWER>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };
        c_cedille: c_cedille {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_ALT &kp NON_US_BSLH>;
        };
        Double_0: Double_0 {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&kp KP_NUMBER_0 &kp KP_NUMBER_0>;
        };
        euro: euro {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&kp LEFT_SHIFT &kp SPACE>,
                <&macro_release>,
                <&kp GRAVE>;
        };
        cut: cut {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp LEFT_BRACKET>;
        };
        copy: copy {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp M>;
        };
        paste: paste {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&kp LCTRL &kp SLASH>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&out OUT_BLE>,
                <&bt BT_SEL 0>;
        };
    };

    macros {
        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&out OUT_BLE>,
                <&bt BT_SEL 1>;
        };
    };

    macros {
        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&out OUT_BLE>,
                <&bt BT_SEL 2>;
        };
    };

    macros {
        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&out OUT_BLE>,
                <&bt BT_SEL 3>;
        };
    };

    magic: magic_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "MAGIC_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        bindings =
            <&mo>,
            <&rgb_ug_status_macro>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
               &kp F1        &kp F2      &kp F3             &kp F4           &kp F5                                                                                                      &kp F6             &kp F7   &kp F8          &kp F9    &kp F10
            &kp GRAVE        &kp N1      &kp N2             &kp N3           &kp N4  &kp N5                                                                                  &kp N6      &kp N7             &kp N8   &kp N9          &kp N0  &kp MINUS
 &kp C_AL_TEXT_EDITOR         &kp Q       &kp W              &kp E            &kp R   &kp T                                                                                   &kp Y       &kp U              &kp I    &kp O           &kp P   &kp LBKT
            &layer_td         &kp A       &kp S              &kp D            &kp F   &kp G                                                                                   &kp H       &kp J              &kp K    &kp L        &kp SEMI    &kp SQT
 &kp NON_US_BACKSLASH         &kp Z       &kp X              &kp C            &kp V   &kp B        &kp CAPS   &kp LEFT_ALT  &kp LCTRL  &kp ESCAPE        &kp DEL    &kp TAB   &kp N       &kp M          &kp COMMA  &kp DOT        &kp FSLH   &kp BSLH
           &magic 2 0  &kp LEFT_WIN  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP          &sk LEFT_SHIFT  &sk RIGHT_ALT      &mo 1   &kp ENTER  &kp BACKSPACE  &kp SPACE          &c_cedille  &kp RIGHT_BRACKET  &kp INS  &kp SCROLLLOCK  &kp EQUAL
            >;
        };

        lower_layer {
            bindings = <
       &trans        &trans      &trans      &trans     &trans                                                                                &trans        &trans      &trans        &trans        &trans
 &kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT   &kp C_PP  &trans                                                    &kp C_AL_CALC  &kp KP_NLCK  &kp KP_CLEAR      &trans       &kp F11       &kp F12
       &trans     &kp PG_UP    &kp HOME      &kp UP    &kp END  &trans                                                        &kp MINUS    &kp KP_N7     &kp KP_N8   &kp KP_N9         &euro        &trans
       &trans     &kp PG_DN    &kp LEFT    &kp DOWN  &kp RIGHT  &trans                                                  &kp KP_MULTIPLY    &kp KP_N4     &kp KP_N5   &kp KP_N6   &kp KP_PLUS  &kp NUMBER_4
       &trans        &trans      &trans      &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &kp KP_SLASH    &kp KP_N1     &kp KP_N2   &kp KP_N3  &kp KP_MINUS  &kp NUMBER_7
       &trans        &trans        &cut       &copy     &paste          &trans  &trans  &trans  &trans  &trans  &trans                     &kp KP_N0     &Double_0  &kp KP_DOT         &kp G        &trans
            >;
        };

        magic_layer {
            bindings = <
  &bt BT_CLR            &none            &none            &none            &none                                                                                  &none   &none   &none   &none  &bt BT_CLR_ALL
       &none            &none            &none            &none            &none            &none                                                         &none   &none   &none   &none   &none           &none
       &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                         &none   &none   &none   &none   &none           &none
 &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                         &none   &none   &none   &none   &none     &bootloader
      &reset            &none            &none            &none            &none            &none   &bt_2   &bt_3         &none   &none   &none   &none   &none   &none   &none   &none   &none          &reset
       &none            &none            &none            &none            &none                    &bt_0   &bt_1  &out OUT_USB   &none   &none   &none           &none   &none   &none   &none           &to 3
            >;
        };

        factory_test_layer {
            bindings = <
 &kp N0  &kp N6  &kp N2  &kp N8  &kp N4                                                                  &kp N4  &kp N8  &kp N2  &kp N6  &kp N0
 &kp N1  &kp N7  &kp N3  &kp N9  &kp N5  &kp N0                                                  &kp N0  &kp N5  &kp N9  &kp N3  &kp N7  &kp N1
 &kp N2  &kp N8  &kp N4  &kp N0  &kp N6  &kp N1                                                  &kp N1  &kp N6  &kp N0  &kp N4  &kp N8  &kp N2
 &kp N3  &kp N9  &kp N5  &kp N1  &kp N7  &kp N2                                                  &kp N2  &kp N7  &kp N1  &kp N5  &kp N9  &kp N3
 &kp N4  &kp N0  &kp N6  &kp N2  &kp N8  &kp N3  &kp N4  &kp N5  &kp N6  &kp N6  &kp N5  &kp N4  &kp N3  &kp N8  &kp N2  &kp N6  &kp N0  &kp N4
 &kp N5  &kp N1  &kp N7  &kp N3  &kp N9          &kp N7  &kp N8  &kp N9  &kp N9  &kp N8  &kp N7          &kp N9  &kp N3  &kp N7  &kp N1  &kp N5
            >;
        };
    };
};
